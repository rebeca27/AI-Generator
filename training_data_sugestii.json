[
  {
    "cerinta": "Aplicatia sa contina 3 ramuri esentiale: 1. Sofer: harta cu traseul sau care sa contina punctele de ridicare si livrare. Timpul estimat pentru ambele . Posibilitatea de a prelua singur o solicitare de la un restaurant sau sa i se acorde livrari. Raport zilnic cu livrarile efectuate.Actualizare in timp real al parcursului sau catre client. 2. Restaurant: preluare comenzi, confirmarea lor si a statusului comenzii in timp real catre client. In orele de varf sa nu mai aiba clientul optiunea de a pune noi comenzi daca dureaza mai mult decat timpul estimat in aplicatie. Solictare sofer si optiunea de a vedea parcursul soferului. 3. Client : sa i-a la cunostinta toate detaliile legate de restaurant ( timp estimate de livrare , timp de preparare etc). sa adauge produse in cos , achizitie cu card sau numerar din aplicatie. Sa primeasca notificari cu fiecare parcurs al comenzii (confirmata, comanda urmeaza sa fie ridicata, comanda a fost ridicata, comanda livrata). Dupa plasarea si confirmarea si preluarea comenzii de catre sofer sa I se prezinte soferul, numarul de contact al acestuia si parcursul sau pe harta. FUNCTIE ADMIN : care poate observa activitatea celor 3 ramuri mentionate si poate efectua un raport pe fiecare. Firma are contracted oar cu restaurante . In aditie mai fac livrari de colete mici sau plicuri la solicitarea clientilor prin urmare ar trebui si o optiune de acest gen in aplicatie unde sa ofere cateva info despre colet (daca e plic sau e o cutie si ce demensiuni/greutate are).\n\n\n\n\n\nOferta pentru firma - Oferta 1\n\nI. Scopul documentului: \n\nAceastă ofertă preliminară este bazată pe informațiile pe care ni le-ați furnizat. Înainte de a începe efectiv dezvoltarea și de a vă putea oferi o estimare exactă a costurilor și timpului necesar, va fi necesar să parcurgem câteva etape esențiale de planificare\n\n1. Elaborarea unei diagrame logice pentru a defini arhitectura aplicației. \n2. Crearea unei diagrame ER pentru a structura baza de date. \n3. Realizarea unui design inițial în Figma pentru a elimina orice ambiguitate legată de interfața grafică. \n\nPentru începerea etapelor de mai sus, va fi necesar să semnăm un contract de colaborare și să achitați în avans prețul acestora: \n\nDiagrama logică și diagrama ER: X Euro + TVA \nProiectul în Figma: X Euro + TVA \nAcești bani se vor scădea din prețul total de dezvoltare odată acceptată oferta fermă. \n\nOferta de mai jos este doar orientativă și urmărește să vă ofere o perspectivă asupra modului în care operăm și a costurilor probabile. Pentru o ofertă și un timp de implementare exact, va fi necesar să completăm etapele de planificare menționate\n\nDefiniții:\nReact:\nReact este o bibliotecă JavaScript pentru construirea interfețelor de utilizator. Este utilizată pentru crearea unor interfețe de utilizator reactive și eficiente din punct de vedere al performanței.\n\nIonic:\nIonic este un framework open-source pentru dezvoltarea de aplicații mobile hibride. Utilizează tehnologii web precum JavaScript/React/Angular  pentru a construi aplicații pentru platforme mobile, cum ar fi iOS și Android.\n\nNestJS:\nNestJS este un framework pentru dezvoltarea de aplicații server-side cu Node.js. Este construit pe baza arhitecturii modulare și utilizează TypeScript pentru a oferi un cod bine structurat și ușor de întreținut.\n\nFirebase:\nFirebase este o platformă de dezvoltare a aplicațiilor mobile. Furnizează servicii precum bază de date în timp real, autentificare, stocare și hosting, facilitând dezvoltarea rapidă și scalabilă a aplicațiilor.\n\nMongoDB:\nMongoDB este un sistem de gestionare a bazelor de date NoSQL, orientat pe documente. În loc de tabele, MongoDB folosește colecții și documente JSON-like, oferind flexibilitate și scalabilitate în stocarea datelor.\n\nAPI (Interfață de Programare a Aplicațiilor):\nAPI reprezintă un set de reguli și protocoale care permit comunicarea între diferite componente ale software-ului/aplicației. Este folosit pentru a permite integrarea între diferite aplicații sau servicii, facilitând schimbul de informații și funcționalități între ele.\n\n\nII. Propunere structură (335 Ore - 2 Programatori): \n\nDezvoltarea de bază:\n \nDezvoltarea aplicațiilor folosind tehnologii moderne, cum ar fi React cu Ionic pentru interfața utilizatorului și MongoDB/Firebase pentru baza de date si NestJs pentru back-end.\nConectare utilizatori cu autentificare OTP prin SMS/email pentru securitate sporită.\n\nAplicație Client (iOS și Android): \nCăutare Restaurante: Utilizatorii pot căuta restaurante pe baza locației, tipului de bucătărie.\nPlasare Comenzi: Interfață intuitivă pentru a selecta articole din meniul restaurantului și plasa comanda cu opțiuni precum adăugarea în coș și gestionarea comenzilor anterioare.\nUrmărire Livrare: Funcționalitate de monitorizare a comenzilor în timp real, cu notificări și informații despre stadiul livrării.\nRecenzii și Evaluări: Utilizatorii pot lăsa recenzii și evaluări pentru restaurantele și livrările lor.\nLegare API Stripe pentru Plata cu Cardul: Implementarea unei interfețe de plată folosind API-ul Stripe pentru a permite utilizatorilor să plătească cu cardul.\nStocare Carduri: Opțiunea pentru utilizatori de a salva informațiile cardului pentru a facilita plățile ulterioare și a oferi o experiență de plată mai rapidă.\nOpțiune de Plată Ramburs: Posibilitatea pentru utilizatori de a alege opțiunea de plată la livrare.\n\nAplicație Rider (iOS și Android):\nAcceptare Comenzi: Interfață pentru a accepta sau refuza comenzile, cu informații detaliate despre adresa de livrare și conținutul comenzii.\nGestionare Livrări: Funcționalitate cu informații în timp real despre stadiul comenzii.\nRaportare Financiară: Funcționalitate pentru a genera rapoarte financiare, inclusiv livrari zilnice și lunare.\nInterfață de Navigare: Integrare cu sisteme de navigare pentru a ajuta riderul în timpul livrării (Legare API Google Maps).\n\nAplicație Restaurant (iOS și Android):\nGestionare Meniu: Interfață pentru a adăuga, șterge sau modifica articolele din meniu, inclusiv prețuri și disponibilitate.\nConfirmare Livrări: Posibilitatea de a confirma comenzile și de a oferi informații despre timpul de pregătire și de livrare.\nRaportare Financiară: Funcționalitate pentru a genera rapoarte financiare, inclusiv vânzări zilnice și lunare.\n\nAplicație Admin (Doar Browser):\nGestionare Utilizatori: Crearea și gestionarea conturilor de utilizator, inclusiv drepturile de acces.\nGestionare Restaurante: Crearea și gestionarea restaurantelor.\nGestionare Rider: Crearea și gestionarea riderilor.\nMonitorizare Comenzi: Interfață pentru a monitoriza comenzile în timp real și a rezolva problemele semnalate de utilizatori.\nRapoarte și Analize: Generarea de rapoarte și analize financiare, inclusiv vânzări zilnice și lunare.\n\nIII. Sugestii suplimentare (24 ore de munca * 2 programatori): \nGenerarea automată a facturilor: Legare la API SmartBill pentru a genera automat facturile pentru rideri, restaurante și clienți\n\nIV. Pret și timp de implementare: \n\n*Fiecare punct poate fi supus modificării, editării sau realizării într-un mod mai sumar, cu reducerea funcționalităților, în vederea obținerii unei costuri mai reduse.\n\n*Prețul este orientativ și nu trebuie să fie limitativ; în cazul în care bugetul beneficiarului este mai restrâns decât oferta noastră în faza de proiectare, putem identifica alternative la costuri inferioare prin integrarea unui număr redus de funcționalități.\n\nTimp estimat de livrare: \nDezvoltare de bază împreună cu aplicațiile Client, Rider, Restaurant și Admin (355 Ore cu 2 Programatori): X Euro + TVA\n\nDezvoltare de bază împreună cu aplicațiile Client, Rider, Restaurant și Admin și sugestii suplimentare (379 Ore cu 2 Programatori): X Euro + TVA\n\nTimpul de livrare este influențat de complexitatea proiectului și cerințele dumneavoastră. Vom lucra în strânsă colaborare cu dumneavoastră pentru a respecta termenele stabilite.\n\n*În cadrul actualei oferte, beneficiați de serviciile a doi programatori specializați în limbajul de programare necesar pentru proiectul dumneavoastră, un manager de proiect care va concepe și coordona proiectul, precum și un grafician responsabil de conceperea interfeței utilizatorului/aplicației. Fiecare echipă din cadrul societății noastre dispune de suportul unui mentor, responsabil de supravegherea și asistarea programatorilor. Prețul pentru această echipă este de X de euro pe oră. \n\nTermeni de achiziție:\n​\nAceastă ofertă este strict confidențială. Veziv IT Services SRL nu oferă permisiunea de a împărtăși detalii cu terțe părți.\nPrețurile sunt fără TVA.",
    "sugestii_suplimentare": "mentului: \n\nAceastă ofertă preliminară este bazată pe informațiile pe care ni le-ați furnizat. Înainte de a începe efectiv dezvoltarea și de a vă putea oferi o estimare exactă a costurilor și timpului necesar, va fi necesar să parcurgem câteva etape esențiale de planificare\n\n1. Elaborarea unei diagrame logice pentru a defini arhitectura aplicației. \n2. Crearea unei diagrame ER pentru a structura baza de date. \n3. Realizarea unui design inițial în Figma pentru a elimina orice ambiguitate legată de interfața grafică. \n\nPentru începerea etapelor de mai sus, va fi necesar să semnăm un contract de colaborare și să achitați în avans prețul acestora: \n\nDiagrama logică și diagrama ER: X Euro + TVA \nProiectul în Figma: X Euro + TVA \nAcești bani se vor scădea din prețul total de dezvoltare odată acceptată oferta fermă. \n\nOferta de mai jos este doar orientativă și urmărește să vă ofere o perspectivă asupra modului în care operăm și a costurilor probabile. Pentru o ofertă și un timp de implementare exact, va fi necesar să completăm etapele de planificare menționate\n\nDefiniții:\nReact:\nReact este o bibliotecă JavaScript pentru construirea interfețelor de utilizator. Este utilizată pentru crearea unor interfețe de utilizator reactive și eficiente din punct de vedere al performanței.\n\nIonic:\nIonic este un framework open-source pentru dezvoltarea de aplicații mobile hibride. Utilizează tehnologii web precum JavaScript/React/Angular  pentru a construi aplicații pentru platforme mobile, cum ar fi iOS și Android.\n\nNestJS:\nNestJS este un framework pentru dezvoltarea de aplicații server-side cu Node.js. Este construit pe baza arhitecturii modulare și utilizează TypeScript pentru a oferi un cod bine structurat și ușor de întreținut.\n\nFirebase:\nFirebase este o platformă de dezvoltare a aplicațiilor mobile. Furnizează servicii precum bază de date în timp real, autentificare, stocare și hosting, facilitând dezvoltarea rapidă și scalabilă a aplicațiilor.\n\nMongoDB:\nMongoDB este un sistem de gestionare a bazelor de date NoSQL, orientat pe documente. În loc de tabele, MongoDB folosește colecții și documente JSON-like, oferind flexibilitate și scalabilitate în stocarea datelor.\n\nAPI (Interfață de Programare a Aplicațiilor):\nAPI reprezintă un set de reguli și protocoale care permit comunicarea între diferite componente ale software-ului/aplicației. Este folosit pentru a permite integrarea între diferite aplicații sau servicii, facilitând schimbul de informații și funcționalități între ele.\n\n\nII. Propunere structură (335 Ore - 2 Programatori): \n\nDezvoltarea de bază:\n \nDezvoltarea aplicațiilor folosind tehnologii moderne, cum ar fi React cu Ionic pentru interfața utilizatorului și MongoDB/Firebase pentru baza de date si NestJs pentru back-end.\nConectare utilizatori cu autentificare OTP prin SMS/email pentru securitate sporită.\n\nAplicație Client (iOS și Android): \nCăutare Restaurante: Utilizatorii pot căuta restaurante pe baza locației, tipului de bucătărie.\nPlasare Comenzi: Interfață intuitivă pentru a selecta articole din meniul restaurantului și plasa comanda cu opțiuni precum adăugarea în coș și gestionarea comenzilor anterioare.\nUrmărire Livrare: Funcționalitate de monitorizare a comenzilor în timp real, cu notificări și informații despre stadiul livrării.\nRecenzii și Evaluări: Utilizatorii pot lăsa recenzii și evaluări pentru restaurantele și livrările lor.\nLegare API Stripe pentru Plata cu Cardul: Implementarea unei interfețe de plată folosind API-ul Stripe pentru a permite utilizatorilor să plătească cu cardul.\nStocare Carduri: Opțiunea pentru utilizatori de a salva informațiile cardului pentru a facilita plățile ulterioare și a oferi o experiență de plată mai rapidă.\nOpțiune de Plată Ramburs: Posibilitatea pentru utilizatori de a alege opțiunea de plată la livrare.\n\nAplicație Rider (iOS și Android):\nAcceptare Comenzi: Interfață pentru a accepta sau refuza comenzile, cu informații detaliate despre adresa de livrare și conținutul comenzii.\nGestionare Livrări: Funcționalitate cu informații în timp real despre stadiul comenzii.\nRaportare Financiară: Funcționalitate pentru a genera rapoarte financiare, inclusiv livrari zilnice și lunare.\nInterfață de Navigare: Integrare cu sisteme de navigare pentru a ajuta riderul în timpul livrării (Legare API Google Maps).\n\nAplicație Restaurant (iOS și Android):\nGestionare Meniu: Interfață pentru a adăuga, șterge sau modifica articolele din meniu, inclusiv prețuri și disponibilitate.\nConfirmare Livrări: Posibilitatea de a confirma comenzile și de a oferi informații despre timpul de pregătire și de livrare.\nRaportare Financiară: Funcționalitate pentru a genera rapoarte financiare, inclusiv vânzări zilnice și lunare.\n\nAplicație Admin (Doar Browser):\nGestionare Utilizatori: Crearea și gestionarea conturilor de utilizator, inclusiv drepturile de acces.\nGestionare Restaurante: Crearea și gestionarea restaurantelor.\nGestionare Rider: Crearea și gestionarea riderilor.\nMonitorizare Comenzi: Interfață pentru a monitoriza comenzile în timp real și a rezolva problemele semnalate de utilizatori.\nRapoarte și Analize: Generarea de rapoarte și analize financiare, inclusiv vânzări zilnice și lunare.\n\nIII. Sugestii suplimentare (24 ore de munca * 2 programatori): \nGenerarea automată a facturilor: Legare la API SmartBill pentru a genera automat facturile pentru rideri, restaurante și clienți"
  },
  {
    "cerinta": "Comenzile se depun doar online. Moment in care este preluata comanda pentru a verifica stocul de materiale,costurile cu care au fost achizitionate si ce resturi de material pot fi folosite in lucrarea solicitata, apoi se realizeaza o oferta de pret care este trimisa catre client. Daca clientul accepta oferta propusa se realizeaza o comanda pe diferenta de material necesare si comanda este data spre prelucrare. Intre timp clientul primeste diverse documente care ii sunt necesare fie ca acesta cunoste acest aspect sau nu. Cum ar fi : Aviz Calitate, SSM, Certificat Performanta si Factura . 1. In momentul in care un client depune online o comanda ERP-ul sa extraga din acea comanda in mod automat un necesar de material; 2. Sa existe o sectiune de “RESTURI MATERIALE” unde sa fie intrudose pe marimi si bucati in sistem iar la momentul unei noi comenzi dupa ce se sugereaza de catre ERP necesarul de materiale sa existe optiunea automata de interogare a stocului curent, a resturilor reutilizabile de materiale si de comenzile deschise. ( exemplu : 1500buc/articol din care 1300buc/articol rezervate pt comenzile deschise si raman pt noua comanda 200buc/articol si 3 resturi care se potrivesc ca dimensiune pt noua comanda). Recapitulare : in momentul in care exista o noua comanda , programul sa extraga automat din stoc necesarul si daca e ceva din resturile de material sa se potriveasca sa se extraga si acelea, astfel incat sa ramana strict necesarul unei noi comenzicatre furnizor.Aceste informatii fiind necesare inainte de a plasa catre furnizor o coamnda cu necesar. 3. In momentul in care comanda este finalizata si este pregatita pentru a fi trimisa catre client anuumite produse se trimit asamblate, insa altele se trimit pe bucati. Angajatul care face inventarul inainte de livrare sa aiba posibilitatea de a trece in ERP componentele lipsa, astfel incat cei care se ocupa de gestiune sa vada in timp real acest lucru sis a efectueze o coamnda pt ele catre furnizor. 4. Pentru partea de documente : documentele mentionate in INTRO sa se automatizeze in stilul in care avem noi in ERP la acordul de confidentialitate. 5. CASH-FLOW: sold curent al firmei in banca si viitoarele plati si incasari impartite pe OP si BO (biletele la ordin sa fie cu reminder la inceput de saptamana- fie ca incaseaza fie ca plaOfertae el). In momentul in care firma in cauza efectueaza un BO fiind un buget stabilit lunar pt ele , programul sa nu ii permita ca din greseala sa depaseasca acel buget in momentul in care noteaza in ERP un nou BO de efectuat. NOTA: singurul program software cu care se lucreaza acum este WinMENTOR.\n\nOferta pentru firma - Oferta 2\n\nI. Scopul documentului: \n\nAceastă ofertă preliminară este bazată pe informațiile pe care ni le-ați furnizat în același timp înainte de a începe efectiv dezvoltarea și de a vă putea oferi o estimare exactă a costurilor și timpului necesar, va fi necesar să parcurgem câteva etape esențiale de planificare\n\n1. Elaborarea unei diagrame logice pentru a defini arhitectura aplicației. \n2. Crearea unei diagrame ER pentru a structura baza de date. \n3. Realizarea unui design inițial în Figma pentru a elimina orice ambiguitate legată de interfața grafică. \n\nPentru începerea etapelor de mai sus, va fi necesar să semnăm un contract de colaborare și să achitați în avans prețul acestora: \n\nDiagrama logică și diagrama ER: X Euro + TVA \nProiectul în Figma: X Euro + TVA \nAcești bani se vor scădea din prețul total de dezvoltare odată acceptată oferta fermă. \n\nOferta de mai jos este doar orientativă și urmărește să vă ofere o perspectivă asupra modului în care operăm și a costurilor probabile. Pentru o ofertă și un timp de implementare exact, va fi necesar să completăm etapele de planificare menționate\n\nScopul acestui document este de a prezenta o ofertă pentru dezvoltarea unui CRM/ERP personalizat conform cerințelor.\n\nDefiniții:\n- CRM (Customer Relationship Management): CRM este un acronim pentru \"Customer Relationship Management\" sau \"Gestionarea Relațiilor cu Clienții\" în română. Este o strategie și un set de tehnologii utilizate pentru a gestiona relațiile și interacțiunile cu clienții. Scopul principal al unui sistem CRM este să îmbunătățească relațiile cu clienții, să optimizeze procesele de vânzare și marketing și să ofere o mai bună experiență generală pentru clienți.\n- ERP (Enterprise Resource Planning): ERP este un acronim pentru \"Enterprise Resource Planning\" sau \"Planificarea Resurselor Enterprise\" în română. Este un sistem de software care ajută organizațiile să gestioneze și să integreze eficient toate procesele lor de afaceri, inclusiv contabilitatea, resursele umane, gestionarea stocurilor, producția, vânzările și multe altele. Scopul principal al unui sistem ERP este să faciliteze fluxurile de lucru interne și să ofere o imagine consolidată și în timp real a resurselor și proceselor organizației.\n\nII. Propunere structură: \n\n1. Secțiune de Comenzi și Stocuri:\n\nImplementarea unui sistem de gestionare a comenzilor online, inclusiv verificarea stocurilor de materiale și costurile de achiziție (Înainte de a plasa comanda, se va genera automat o ofertă. Administratorii vor valida oferta, iar apoi aceasta va fi trimisă către client printr-un buton dedicat. Comanda va fi procesată doar atunci când clientul acceptă oferta, moment în care stocurile vor fi rezervate timp de 2 zile, astfel încât materialele să fie disponibile în momentul acceptării ofertei de către client).\nSistem de gestionare a resturilor de materiale, unde informațiile despre dimensiuni și cantități pot fi introduse și monitorizate.\nAutomatizarea extragerii necesarului de materiale din stocuri și din resturile disponibile pentru fiecare comandă nouă.\n- Timp de dezvoltate: 25 zile * 2 programatori\n\n2. Secțiune de Livrare și Gestiune:\nImplementarea unui sistem de gestionare a livrărilor care poate manipula produsele asamblate sau trimise pe bucăți cu posibilitatea angajaților care efectuează inventarul înainte de livrare de a introduce în ERP componentele lipsă.\nSincronizarea în timp real a stocurilor și notificare pentru generarea a comenzilor către furnizori pentru componente lipsă.\n- Timp de dezvoltate: 15 zile * 2 programatori\n\n3. Automatizarea Documentelor:\nImplementarea unui sistem de automatizarea generării documentelor necesare, cum ar fi Avize de Calitate, documente SSM, Certificate de performanță.\n- Timp de dezvoltate: 5 zile * 2 programatori\n\n4. Gestionarea Cash-Flow-ului:\nMonitorizarea soldului curent al firmei în bancă și urmărirea viitoarelor plăți și încasări, împărțite pe ordine de plată (OP) și bilete la ordin (BO) automatizare prin importul de fișiere CSV din extrasele băncii.\nImplementarea unui sistem de gestionare a bugetelor (BO), cu posibilitatea de a seta și monitoriza limitele de cheltuieli pentru fiecare lună. (Notificări și avertizări pentru a preveni depășirea bugetului stabilit.)\n- Timp de dezvoltate: 20 zile * 2 programatori\n\n5. Integrarea cu WinMentor:\nIntegrarea cu Mentor, programul software actual, pentru a asigura o tranziție eficientă a datelor și proceselor.\n- Timp de dezvoltate: 12 zile * 1 programator\n\nIII. Sugestii suplimentare:\nImplementarea unui API bancar pentru automatizarea operațiunilor de intrare și ieșire din contul bancar al firmei, cu scopul de a sincroniza automat o parte din datele financiare direct de pe cont.\n- Timp de dezvoltate: 10 zile * 1 programator\n\nIV. Pret și timp de implementare: \n\nTimp estimat de livrare: \n71 zile * 2 programatori (568 Ore lucratoare dezvoltare bază): X Euro + TVA \n10 zile * 1 programator (secțiunea sugestii = 80 Ore lucratoare): X Euro + TVA \nTimpul de livrare este influențat de complexitatea proiectului și cerințele dumneavoastră. \nVom lucra în strânsă colaborare cu dumneavoastră pentru a respecta termenele stabilite.",
    "sugestii_suplimentare": "Implementarea unui API bancar pentru automatizarea operațiunilor de intrare și ieșire din contul bancar al firmei, cu scopul de a sincroniza automat o parte din datele financiare direct de pe cont.\n- Timp de dezvoltate: 10 zile * 1 programator"
  }
]